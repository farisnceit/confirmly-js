{"version":3,"file":"confirmly-popup.umd.min.js","sources":["../src/confirmlyPopup.ts"],"sourcesContent":["import { createPopper, Instance as PopperInstance, Placement } from '@popperjs/core';\nimport { PopperOptions } from './constants';\n\nexport class ConfirmPopup {\n  private popperInstance: PopperInstance | null = null;\n  private readonly template: string;\n  private readonly buttonClasses: { confirm: string; cancel: string };\n  private readonly buttonContents: { confirm: string; cancel: string };\n  private readonly defaultPlacement: Placement;\n  private readonly popperElement: HTMLElement;\n  private onConfirmCallback?: () => void;\n  private onCancelCallback?: () => void;\n  private readonly showError: boolean;\n\n  constructor({\n    template,\n    buttonClasses = { \n      confirm: 'confirmly__button confirmly__button--confirm', \n      cancel: 'confirmly__button confirmly__button--cancel' \n    },\n    buttonContents = { confirm: 'Yes', cancel: 'No' },\n    defaultPlacement = 'top',\n    targetElement,\n    onConfirm,\n    onCancel,\n    showError = true,\n  }: PopperOptions) {\n    this.template = template || this.defaultTemplate();\n    this.buttonClasses = buttonClasses;\n    this.buttonContents = buttonContents;\n    this.defaultPlacement = defaultPlacement;\n    this.showError = showError;\n\n    this.popperElement = this.createPopperElement();\n    document.body.appendChild(this.popperElement);\n\n    if (targetElement) {\n      this.attach(targetElement, onConfirm, onCancel);\n    } else if (this.showError) {\n      console.error('Target Element is not defined');\n    }\n  }\n\n  private defaultTemplate(): string {\n    return `\n      <div class=\"confirmly__popup\">\n        <div class=\"confirmly__content\">\n          <p class=\"confirmly__message\">Are you sure?</p>\n          <div class=\"confirmly__buttons\">\n            <button class=\"{{confirmClass}}\" data-button=\"cancel\">{{cancelContent}}</button>\n            <button class=\"{{confirmClass}}\" data-button=\"confirm\">{{confirmContent}}</button>\n          </div>\n        </div>\n        <div class=\"confirmly__arrow\" data-popper-arrow></div>\n      </div>\n    `;\n  }\n\n  private createPopperElement(): HTMLElement {\n    const popperDiv = document.createElement('div');\n    popperDiv.className = 'confirmly';\n    popperDiv.style.display = 'none';\n\n    const template = this.template\n      .replace('{{confirmClass}}', this.buttonClasses.confirm)\n      .replace('{{cancelClass}}', this.buttonClasses.cancel)\n      .replace('{{confirmContent}}', this.buttonContents.confirm)\n      .replace('{{cancelContent}}', this.buttonContents.cancel);\n\n    popperDiv.innerHTML = template;\n    this.attachButtonListeners(popperDiv);\n\n    return popperDiv;\n  }\n\n  private attachButtonListeners(popperDiv: HTMLElement): void {\n    const confirmButton = popperDiv.querySelector('[data-button=\"confirm\"]');\n    const cancelButton = popperDiv.querySelector('[data-button=\"cancel\"]');\n\n    if (confirmButton) {\n      confirmButton.addEventListener('click', this.handleConfirm.bind(this));\n    }\n\n    if (cancelButton) {\n      cancelButton.addEventListener('click', this.handleCancel.bind(this));\n    }\n  }\n\n  public attach(\n    element: HTMLElement,\n    onConfirm?: () => void,\n    onCancel?: () => void,\n  ): void {\n    if (!element && this.showError) {\n      console.error('Target Element is not defined');\n      return;\n    }\n\n    this.onConfirmCallback = onConfirm;\n    this.onCancelCallback = onCancel;\n\n    element?.addEventListener('click', (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.showPopper(element);\n    });\n\n    document.addEventListener('click', this.handleOutsideClick.bind(this));\n    document.addEventListener('keydown', this.handleEscapeKey.bind(this));\n  }\n\n  public destroy(): void {\n    if (this.popperInstance) {\n      this.popperInstance.destroy();\n      this.popperInstance = null;\n    }\n    this.popperElement.remove();\n    document.removeEventListener('click', this.handleOutsideClick.bind(this));\n    document.removeEventListener('keydown', this.handleEscapeKey.bind(this));\n  }\n\n  private handleOutsideClick(event: MouseEvent): void {\n    if (!this.popperElement.contains(event.target as Node)) {\n      this.hidePopper();\n    }\n  }\n\n  private handleEscapeKey(event: KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      this.hidePopper();\n    }\n  }\n\n  private showPopper(targetElement: HTMLElement) {\n    this.popperElement.style.display = 'block';\n    const popup = this.popperElement.querySelector('.confirmly__popup');\n    \n    if (popup) {\n      // Add visible class after a small delay to trigger animation\n      requestAnimationFrame(() => {\n        popup.classList.add('confirmly__popup--visible');\n      });\n    }\n\n    if (this.popperInstance) {\n      this.popperInstance.destroy();\n    }\n\n    this.popperInstance = createPopper(targetElement, this.popperElement, {\n      placement: this.defaultPlacement,\n      modifiers: [\n        {\n          name: 'offset',\n          options: {\n            offset: [0, 8],\n          },\n        },\n        {\n          name: 'arrow',\n          options: {\n            element: '[data-popper-arrow]',\n            padding: 8,\n          },\n        },\n        {\n          name: 'preventOverflow',\n          options: {\n            padding: 8,\n            boundary: 'viewport',\n          },\n        },\n      ],\n    });\n  }\n\n  private hidePopper(): void {\n    const popup = this.popperElement.querySelector('.confirmly__popup');\n    \n    if (popup) {\n      popup.classList.remove('confirmly__popup--visible');\n      // Wait for animation to complete\n      setTimeout(() => {\n        if (this.popperInstance) {\n          this.popperInstance.destroy();\n          this.popperInstance = null;\n        }\n        this.popperElement.style.display = 'none';\n      }, 200);\n    }\n  }\n\n  private handleConfirm(): void {\n    this.onConfirmCallback?.();\n    this.hidePopper();\n  }\n\n  private handleCancel(): void {\n    this.onCancelCallback?.();\n    this.hidePopper();\n  }\n}\n"],"names":["ConfirmPopup","_createClass","_ref","template","_ref$buttonClasses","buttonClasses","undefined","confirm","cancel","_ref$buttonContents","buttonContents","_ref$defaultPlacement","defaultPlacement","targetElement","onConfirm","onCancel","_ref$showError","showError","_classCallCheck","this","defaultTemplate","popperElement","createPopperElement","document","body","appendChild","attach","console","error","key","value","popperDiv","createElement","className","style","display","replace","innerHTML","attachButtonListeners","confirmButton","querySelector","cancelButton","addEventListener","handleConfirm","bind","handleCancel","element","_this","onConfirmCallback","onCancelCallback","event","preventDefault","stopPropagation","showPopper","handleOutsideClick","handleEscapeKey","popperInstance","destroy","remove","removeEventListener","contains","target","hidePopper","popup","requestAnimationFrame","classList","add","createPopper","placement","modifiers","name","options","offset","padding","boundary","_this2","setTimeout","_this$onConfirmCallba","call","_this$onCancelCallbac"],"mappings":"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"}